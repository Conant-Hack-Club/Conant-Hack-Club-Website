{"ast":null,"code":"var _jsxFileName = \"/Users/ronit/Documents/GitHub/hackClubWebsite/src/components/ProjectsGridScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"../static/css/projectsscreen.css\";\nimport { db } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectsGridScreen({\n  year\n}) {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  const [info, setInfo] = useState(\"\");\n  const [picture, setPicture] = useState(\"\");\n  useEffect(() => {\n    db.collection('years').doc(year).collection(\"projects\").onSnapshot(snapshot => {\n      setProjects(snapshot.docs.map(doc => ({\n        data: doc.data()\n      })));\n    });\n    var docRef = db.collection('years').doc(year);\n    docRef.get().then(doc => {\n      if (doc.exists) {\n        let data = doc.data();\n        setInfo(data.info);\n        setPicture(data.picture);\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    }).catch(error => {\n      console.log(\"Error getting document:\", error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'white',\n        justifyContent: 'center',\n        textAlign: 'center',\n        alignItems: 'center'\n      },\n      children: [year, \" Projects\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: picture,\n      className: \"image\",\n      width: \"25%\",\n      height: \"auto\",\n      alt: \"Conant Hack Club\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'white',\n        textAlign: 'center'\n      },\n      children: info\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"grid\",\n      children: projects.map(({\n        id,\n        data\n      }) =>\n      /*#__PURE__*/\n      // <Carousel.Item key={id}>\n      _jsxDEV(\"div\", {\n        class: \"item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: data.projectUrl,\n          target: \"blank\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              justifyContent: 'center',\n              textAlign: 'center',\n              alignItems: 'center',\n              minHeight: \"200px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: data.pictureSrc,\n              style: {\n                zIndex: \"11\",\n                position: \"sticky\"\n              },\n              width: \"90%\" // height = \"auto\"\n              ,\n              alt: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: data.creator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProjectsGridScreen, \"TDfoK8S3VvtCDuhKwIfCjNBGwnE=\");\n\n_c = ProjectsGridScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsGridScreen\");","map":{"version":3,"sources":["/Users/ronit/Documents/GitHub/hackClubWebsite/src/components/ProjectsGridScreen.js"],"names":["React","useEffect","useState","db","ProjectsGridScreen","year","projects","setProjects","info","setInfo","picture","setPicture","collection","doc","onSnapshot","snapshot","docs","map","data","docRef","get","then","exists","console","log","catch","error","color","justifyContent","textAlign","alignItems","id","projectUrl","minHeight","pictureSrc","zIndex","position","name","creator","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState }  from 'react'\nimport \"../static/css/projectsscreen.css\";\nimport {db} from \"./firebase\"\n\nexport default function ProjectsGridScreen({year}) {\n    const [projects, setProjects] = useState([])\n    const [info, setInfo] = useState(\"\")\n    const [picture, setPicture] = useState(\"\")\n\n    useEffect(() => {\n    \n      db.collection('years').doc(year).collection(\"projects\").onSnapshot((snapshot) => {\n        setProjects(snapshot.docs.map((doc) => ({\n          data: doc.data()\n        })));\n      })\n\n      var docRef = db.collection('years').doc(year)\n\n    docRef.get().then((doc) => {\n        if (doc.exists) {\n            let data = doc.data();\n            setInfo(data.info)\n            setPicture(data.picture)\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    }).catch((error) => {\n        console.log(\"Error getting document:\", error);\n    });\n\n\n    }, [])\n\n    return (\n        <div>\n            <br></br>\n            <h1 style={{color:'white',justifyContent:'center', textAlign: 'center', alignItems:'center'}}>{year} Projects</h1>\n            <br></br>\n            <img\n                src={picture}\n                className = \"image\"\n                width=\"25%\"\n                height = \"auto\"\n\n                alt = {\"Conant Hack Club\"}\n                \n            />\n            <br></br>\n            <p style={{color:'white', textAlign: 'center'}}>{info}</p>\n            <br></br>\n            <div class=\"grid\">{\n                projects.map(({id, data}) => (\n                    // <Carousel.Item key={id}>\n                    <div class=\"item\">\n                        <a href = {data.projectUrl} target=\"blank\">\n                            <div style={{justifyContent:'center', textAlign: 'center', alignItems:'center', minHeight:\"200px\"}}>\n                                <img\n                                    src={data.pictureSrc}\n                                    style={{zIndex: \"11\", position: \"sticky\"}}\n                                    width=\"90%\"\n                                    // height = \"auto\"\n\n                                    alt = {data.name}\n                                    \n                                />\n                                <h3>{data.name}</h3>\n                                <h5>{data.creator}</h5>\n                                <p>{data.description}</p>\n                            </div>\n                        </a>\n                    </div>\n                ))}\n\n            </div>\n            <br></br>\n            <br></br>\n            <br></br>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}